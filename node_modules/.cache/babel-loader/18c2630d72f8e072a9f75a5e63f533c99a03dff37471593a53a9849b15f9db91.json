{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ecormmerceweb\\\\eccommerce\\\\src\\\\context\\\\userContext.js\",\n  _s = $RefreshSig$();\n// context/userContext.js\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [cartQuantity, setCartQuantity] = useState(0);\n  const navigate = useNavigate();\n  const baseUrl = \"http://localhost:5000/users\";\n\n  // Update cart quantity when a product is added\n  const cartAccess = () => {\n    setCartQuantity(prevQuantity => prevQuantity + 1);\n  };\n\n  // Function for logging in user\n  const loginUser = (name, password) => {\n    fetch(baseUrl).then(res => res.json()).then(users => {\n      const user = users.find(user => user.name === name && user.password === password);\n      if (user) {\n        setUser(user);\n        toast.success(`Welcome ${user.name}!`, {\n          toastId: \"2\",\n          duration: 1000\n        });\n        navigate('/');\n      } else {\n        toast.error(\"Invalid credentials!\", {\n          toastId: \"3\",\n          duration: 1000\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      setUser,\n      cartQuantity,\n      setCartQuantity,\n      cartAccess // Corrected function name for use in Shop component\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"/CkvNQyLFCtazXl6/S0JnCP8zuk=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","toast","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","cartQuantity","setCartQuantity","navigate","baseUrl","cartAccess","prevQuantity","loginUser","name","password","fetch","then","res","json","users","find","success","toastId","duration","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ecormmerceweb/eccommerce/src/context/userContext.js"],"sourcesContent":["// context/userContext.js\r\nimport { createContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [cartQuantity, setCartQuantity] = useState(0);\r\n  const navigate = useNavigate();\r\n  const baseUrl = \"http://localhost:5000/users\";\r\n\r\n  // Update cart quantity when a product is added\r\n  const cartAccess = () => {\r\n    setCartQuantity((prevQuantity) => prevQuantity + 1);\r\n  };\r\n\r\n  // Function for logging in user\r\n  const loginUser = (name, password) => {\r\n    fetch(baseUrl)\r\n      .then((res) => res.json())\r\n      .then((users) => {\r\n        const user = users.find((user) => user.name === name && user.password === password);\r\n        if (user) {\r\n          setUser(user);\r\n          toast.success(`Welcome ${user.name}!`, { toastId: \"2\", duration: 1000 });\r\n          navigate('/');\r\n        } else {\r\n          toast.error(\"Invalid credentials!\", { toastId: \"3\", duration: 1000 });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{\r\n      user,\r\n      loginUser,\r\n      setUser,\r\n      cartQuantity,\r\n      setCartQuantity,\r\n      cartAccess,  // Corrected function name for use in Shop component\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserProvider;\r\n"],"mappings":";;AAAA;AACA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,OAAO,GAAG,6BAA6B;;EAE7C;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBH,eAAe,CAAEI,YAAY,IAAKA,YAAY,GAAG,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACpCC,KAAK,CAACN,OAAO,CAAC,CACXO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,KAAK,IAAK;MACf,MAAMf,IAAI,GAAGe,KAAK,CAACC,IAAI,CAAEhB,IAAI,IAAKA,IAAI,CAACS,IAAI,KAAKA,IAAI,IAAIT,IAAI,CAACU,QAAQ,KAAKA,QAAQ,CAAC;MACnF,IAAIV,IAAI,EAAE;QACRC,OAAO,CAACD,IAAI,CAAC;QACbR,KAAK,CAACyB,OAAO,CAAC,WAAWjB,IAAI,CAACS,IAAI,GAAG,EAAE;UAAES,OAAO,EAAE,GAAG;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;QACxEf,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACLZ,KAAK,CAAC4B,KAAK,CAAC,sBAAsB,EAAE;UAAEF,OAAO,EAAE,GAAG;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;MACvE;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACExB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAC3BtB,IAAI;MACJQ,SAAS;MACTP,OAAO;MACPC,YAAY;MACZC,eAAe;MACfG,UAAU,CAAG;IACf,CAAE;IAAAR,QAAA,EACCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CAvCIF,YAAY;EAAA,QAGCJ,WAAW;AAAA;AAAAkC,EAAA,GAHxB9B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
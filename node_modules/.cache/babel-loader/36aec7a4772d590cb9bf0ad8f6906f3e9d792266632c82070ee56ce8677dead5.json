{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ecormmerceweb\\\\eccommerce\\\\src\\\\context\\\\userContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const baseUrl = \"http://localhost:5000/users\";\n  function loginUser(name, password) {\n    fetch(baseUrl).then(res => res.json()).then(users => {\n      const user = users.find(user => user.name === name && user.password === password);\n      if (user) {\n        setUser(user);\n        toast.success(`Welcome ${user.name}!`, {\n          toastId: \"2\"\n        });\n        navigate('/');\n      } else {\n        toast.error(\"Invalid credentials!\", {\n          toastId: \"3\"\n        });\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loginUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_s(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","baseUrl","loginUser","name","password","fetch","then","res","json","users","find","toast","success","toastId","navigate","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ecormmerceweb/eccommerce/src/context/userContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n\r\n\r\nexport const UserContext = createContext(null)\r\n\r\nconst UserProvider = ({children}) => {\r\n    const [user, setUser] = useState(null)\r\n      const baseUrl = \"http://localhost:5000/users\"\r\n\r\n\r\n    function loginUser(name, password) {\r\n        fetch(baseUrl)\r\n        .then(res => res.json())\r\n        .then(users => {\r\n          const user = users.find(user => user.name === name && user.password === password )\r\n          if (user) {\r\n            setUser(user)\r\n            toast.success(`Welcome ${user.name}!`, {toastId: \"2\"})\r\n            navigate('/')\r\n          }\r\n          else {\r\n            toast.error(\"Invalid credentials!\", {toastId: \"3\"})\r\n          }\r\n        })\r\n      }\r\n\r\n    return <UserContext.Provider value={{\r\n        user,\r\n        loginUser\r\n\r\n    }}>\r\n        {children}\r\n    </UserContext.Provider>\r\n}\r\n\r\n\r\nexport default UserProvider"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMK,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAMS,OAAO,GAAG,6BAA6B;EAG/C,SAASC,SAASA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IAC/BC,KAAK,CAACJ,OAAO,CAAC,CACbK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,KAAK,IAAI;MACb,MAAMV,IAAI,GAAGU,KAAK,CAACC,IAAI,CAACX,IAAI,IAAIA,IAAI,CAACI,IAAI,KAAKA,IAAI,IAAIJ,IAAI,CAACK,QAAQ,KAAKA,QAAS,CAAC;MAClF,IAAIL,IAAI,EAAE;QACRC,OAAO,CAACD,IAAI,CAAC;QACbY,KAAK,CAACC,OAAO,CAAC,WAAWb,IAAI,CAACI,IAAI,GAAG,EAAE;UAACU,OAAO,EAAE;QAAG,CAAC,CAAC;QACtDC,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MACI;QACHH,KAAK,CAACI,KAAK,CAAC,sBAAsB,EAAE;UAACF,OAAO,EAAE;QAAG,CAAC,CAAC;MACrD;IACF,CAAC,CAAC;EACJ;EAEF,oBAAOnB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAChClB,IAAI;MACJG;IAEJ,CAAE;IAAAL,QAAA,EACGA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAC3B,CAAC;AAAAvB,EAAA,CA5BKF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA+BlB,eAAeA,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}